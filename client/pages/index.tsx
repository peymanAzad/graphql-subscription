import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import {
	Post,
	useCreatePostMutation,
	usePostCreatedSubscription,
} from "../src/generated/graphql";
import { useState } from "react";

const Home: NextPage = () => {
	const [posts, setPosts] = useState<Post[]>([]);
	const [form, setForm] = useState({ author: "", comment: "" });
	const [createPost] = useCreatePostMutation();
	const { loading } = usePostCreatedSubscription({
		variables: { author: "test" },
		onSubscriptionData: ({ subscriptionData }) => {
			if (subscriptionData.data?.postCreated)
				setPosts([...posts, subscriptionData.data?.postCreated]);
		},
	});

	const onInputChanged = (name: string, value: string) => {
		const newPost = { ...form, [name]: value };
		setForm(newPost);
	};
	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>
				<h2>Create Posts</h2>
				<form
					onSubmit={(event) => {
						event.preventDefault();
						createPost({ variables: form });
					}}
				>
					<div>
						<div>
							<label htmlFor="author">Author</label>
						</div>
						<input
							id="author"
							name="author"
							value={form["author"]}
							onChange={(event) => {
								onInputChanged(event.target.name, event.target.value);
							}}
						/>
					</div>
					<div style={{ marginTop: "10px" }}>
						<div>
							<label htmlFor="comment">Comment</label>
						</div>
						<input
							id="comment"
							name="comment"
							value={form["comment"]}
							onChange={(event) => {
								onInputChanged(event.target.name, event.target.value);
							}}
						/>
					</div>
					<button style={{ marginTop: "10px" }} type="submit">
						Submit
					</button>
				</form>
				<h2 style={{ marginTop: "40px" }}>Posts (filter[author = test])</h2>
				<div>
					{!loading &&
						posts.map((post, index) => (
							<p key={index}>{post.author + ": " + post.comment}</p>
						))}
					{!posts.length && "empty"}
				</div>
			</main>
		</div>
	);
};

export default Home;
